https://refactorizando.com/validadores-spring-boot/



@PostMapping("/guardar")
public String guardar(@Valid Producto producto, BindingResult result) {
    if (result.hasErrors()) {			
        return VISTA_FORMULARIO;
    }

    productoService.guardar(producto);

    return "redirect:" + VISTA_LISTA;
}


import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

@Entity
public class Producto {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    @Size(min = 3, max = 8, message="El código del producto tiene que tener entre 3 y 8 caracteres")
    @Pattern(regexp = "[A-Z0-9]+", message="El código del producto solo puede tener letras mayúsculas o números")
    private String codigo;

    @NotEmpty(message="El nombre del producto es obligatorio")
    private String nombre;

    @NotNull(message="El precio es obligatorio")
    @Min(2, message="El precio mínimo es 2")
    @Max(100, message="El precio máximo es 100")
    private Double precio;
    